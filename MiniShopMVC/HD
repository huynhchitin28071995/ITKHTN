package interceptors;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.web.servlet.HandlerInterceptor;

public class XemChimInterceptor implements HandlerInterceptor {
	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler)
			throws Exception {
		HttpSession session = request.getSession();
		if(session.getAttribute("nguoiDung")==null) {
			String url = request.getRequestURI();
			url = url.substring(url.lastIndexOf('/')+1);
			session.setAttribute("url", url);
			response.sendRedirect("login");
			return false;
		}
		return true;
	}
}
-------------
	@RequestMapping(path = {"/login"}, method = RequestMethod.POST)
	public String login(HttpServletRequest request) {
		String userName, password;
		userName = request.getParameter("userName");
		password = request.getParameter("password");
		if(userName.equals("nva") && password.equals("123")) {
			HttpSession session = request.getSession();
			session.setAttribute("nguoiDung", "Nguyen Van A");
			return "redirect:/"+session.getAttribute("url");
		}
		return "home";
	}
	---------------------------
	package restControllers;

import java.util.List;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import businessLogics.AuthorBL;
import javaBeans.Author;

@RestController
public class AuthorController {
	@GetMapping("/rest-author")
	public List<Author> restAuthors(){
		return AuthorBL.docTatCa();
	}
	@GetMapping("/rest-author/{id}")
	public Author restAuthor(@PathVariable(name = "id") int id){
		return AuthorBL.docTheoId(id);
	}
	@PostMapping("/them-author")
	public int themAuthor(@RequestBody Author author){
		return AuthorBL.them(author);
	}
	@PutMapping("/sua-author")
	public int suaAuthor(@RequestBody Author author){
		return AuthorBL.sua(author);
	}
	@DeleteMapping("/xoa-author/{id}")
	public int xoaAuthor(@PathVariable(name = "id") int id){
		return AuthorBL.xoa(id);
	}

}
	